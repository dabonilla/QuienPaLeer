// import request from "supertest";
// import createApp from '../app.js';
// import { jest } from '@jest/globals'


// const saveUser = jest.fn();


// const app = createApp({
//     saveUser
// });


// describe("POST /api/auth/register", () => {


//     describe("Dado un correo, nombre, apellido, telefono y contraseña", () => {

//         test("Debe haber guardado todos los datos del usuario excepto la contraseña", async() => {
//             await request(app).post("/api/auth/register").send({
//                 email: "email",
//                 name: "name",
//                 lastName: "lastName",
//                 password: "password",
//                 phone: "phone"
//             })
//             expect(saveUser.mock.calls.length).toBe(1);
//             expect(saveUser.mock.calls[0]).toBe("object");
//         })


//         // test("Debe responder con un código de estado de respuesta HTTP de 200", async() => {
//         //     const response = await request(app).post("/api/auth/register").send({
//         //         email: "email",
//         //         name: "name",
//         //         lastName: "lastName",
//         //         password: "password",
//         //         phone: "phone"
//         //     });

//         //     expect(response.statusCode).toBe(500)

//         // })

//         // test("Debe especificar json en el encabezado Content-Type", async() => {
//         //     const response = await request(app).post("/api/auth/register").send({
//         //         email: "email",
//         //         name: "name",
//         //         lastName: "lastName",
//         //         password: "password",
//         //         phone: "phone"
//         //     });

//         //     expect(response.headers['content-type']).toEqual(expect.stringContaining("json"))

//         // })

        


//     })



// })